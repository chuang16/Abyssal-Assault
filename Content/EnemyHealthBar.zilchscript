class EnemyHealthBar : ZilchComponent
{
  [Property]
  var JellyScore : Integer = 0;
  [Property]
  var CrabScore: Integer = 0;
  [Property]
  var AnglerScore : Integer = 0;
  [Property]
  var Health : Integer = 1;
  var AnglerBeenHit : Cog = null;
  //the above variable is the amount of health the object has
  
  var Speed : Real = 5.0;
  var XDir : Real = 0.0;
  var YDir : Real = 0.0;
  var Enemy : Cog = null;
  var Bullet : Cog = null;
  var Projectile : Archetype = null;
  var Character : Archetype = null;
  
  var JellyPoint : Archetype = null;
  var AnglerPoint : Archetype = null;
  var CrabPoint : Archetype = null;
  
  function Initialize(init : CogInitializer)
  {
    Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
    
    this.Enemy = this.Space.FindObjectByName("Enemy");
    this.Bullet = this.Space.FindObjectByName("Bullet");
    this.Projectile = Archetype.FindOrNull("Projectile");
    this.Character = Archetype.FindOrNull("Character");
    
    this.JellyPoint = Archetype.FindOrNull("JellyPoint");
    this.AnglerPoint = Archetype.FindOrNull("AnglerPoint");
    this.CrabPoint = Archetype.FindOrNull("CrabPoint");
    
  }

  function OnLogicUpdate(event : UpdateEvent)
  {
    //var PlayerPosition : Real3 = this.Player.Transform.Translation;
    //var distanceX : Real = Owner.Transform.Translation.X - PlayerPosition.X;
    //var distanceY : Real = Owner.Transform.Translation.Y - PlayerPosition.Y;
    //if({
      
      //  this.Owner.RigidBody.Velocity = Real();
      //}
      if(this.Health <= 0)
      {
        this.Owner.Destroy();
          var scoreComponent = this.Space.FindObjectByName("Score").GetComponentByName("Score") as Score;
       
      if (this.JellyScore!=0)
      {
        scoreComponent.IncrementScore(this.JellyScore);
        this.Space.CreateAtPosition(this.JellyPoint, this.Owner.Transform.Translation);
      }
      else if (this.CrabScore!=0)
      {
        scoreComponent.IncrementScore(this.CrabScore);
        this.Space.CreateAtPosition(this.CrabPoint, this.Owner.Transform.Translation);
      }
      else if (this.AnglerScore!=0)
      {
        scoreComponent.IncrementScore(this.AnglerScore);
        this.Space.CreateAtPosition(this.AnglerPoint, this.Owner.Transform.Translation);
      }
    }
  }
  function OnCollisionStarted(event : CollisionEvent)
  {
    if((event.OtherObject.Archetype == this.Projectile)&&(this.AnglerBeenHit != event.OtherObject))
    {
      this.AnglerBeenHit = event.OtherObject;
      this.Health -= 1;
      //the above system defines how much damage the enemy takes per projectile
    }
    if(event.OtherObject.Archetype == this.Character)
    {
      //this.Health -= 100;
      this.Owner.Destroy();
      //enemy dies when colliding with character
    }
  }
}